version: '3.8'
services:
  zoo:
    image: zookeeper:3.7.0
    network_mode: "host"
    container_name: zoo
    environment:
      ZOO_MY_ID: 1
      TZ: Asia/Shanghai
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=192.168.1.52:2888:3888;2181 server.3=192.168.1.53:2888:3888;2181
    volumes:
      - ${OPS_ROOT}/service/discovery/zk/data:/data
      - ${OPS_ROOT}/service/discovery/zk/datalog:/datalog
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure       
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    network_mode: "host"
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.1.51:9092
      - KAFKA_ZOOKEEPER_CONNECT=192.168.1.51:2181,192.168.1.52:2181,192.168.1.53:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - JMX_PORT=9999
      - 'KAFKA_HEAP_OPTS=-Xmx1g -Xms1g'      
      - TZ=Asia/Shanghai
    depends_on:
      - zoo
    volumes:
      - /etc/hosts:/etc/hosts
      - ${OPS_ROOT}/service/mq/kafka/data:/kafka/kafka-logs-localhost.localdomain
      - ${OPS_ROOT}/service/mq/kafka/logs:/opt/kafka/logs
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure       
  cratedb:
    image: crate:4.5.0
    network_mode: "host"
    container_name: cratedb
    environment:
      - CRATE_HEAP_SIZE=4g   
      - TZ=Asia/Shanghai 
    volumes: 
      - ${OPS_ROOT}/service/db/cratedb/data:/crate/data
      - ${OPS_ROOT}/service/db/cratedb/logs:/crate/logs
      - ${OPS_ROOT}/service/db/cratedb/config:/crate/config
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure