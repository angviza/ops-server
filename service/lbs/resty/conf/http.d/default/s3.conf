#+-----------------------------------------------------------+
#+                            S3/minIO                       +
#+-----------------------------------------------------------+

location ~ ^/s3/(?<s3operator>presigned|list|get|put)/(?<s3key>.*)$ {
    access_by_lua_block{
    local jwt = require 'resty.legomd.modules.auth.jwt'
    local payload = jwt.verify()
    if payload then
        ngx.ctx.orgid = string.format('%d',payload.o)
    end
}
    content_by_lua '
        local api = require("resty.legomd.modules.s3.api.api"):new()
        api[ngx.var.s3operator]()

';

}
location ~ ^/s3/presignedc/(?<s3key>.*)$ {
    content_by_lua '
        ngx.ctx.orgid = 1
        local api = require("resty.legomd.modules.s3.api.api"):new()
        api.presigned()

';

}
location ~ ^/s3/adm/(?<s3operator>cp|mv|del|dels|ok)/(?<s3key>.*)$ {
    #    content_by_lua 'require("resty.legomd.modules.s3.api.api")[ngx.var.s3operator]()';
    content_by_lua '
        local api = require("resty.legomd.modules.s3.api.api"):new()
        api[ngx.var.s3operator]()

';
}


location /s3/upload/{
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    client_max_body_size 500m;
    client_body_buffer_size 100m;
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    proxy_buffer_size 100m;
    proxy_buffers 4 100m;
    proxy_busy_buffers_size 100m;
    proxy_temp_file_write_size 100m;

    client_body_temp_path /data/.cache/temp;
    set $uid -1;
    access_by_lua_block{
    local jwt = require 'resty.legomd.modules.auth.jwt'
        local payload = jwt.verify()

        if payload then
            ngx.ctx.orgid = string.format('%d',payload.o)
        end
}
    content_by_lua_file ../lualib/resty/legomd/modules/s3/upload/upload.lua;
}