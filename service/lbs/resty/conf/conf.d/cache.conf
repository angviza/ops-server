# https://www.nginx.com/blog/nginx-caching-guide/ 多个硬盘缓存策略
# https://www.nginx.com/blog/cache-placement-strategies-nginx-plus/  不同类型文件缓存策略
#defind in http
#http {
#    ...
#    proxy_cache_path /data/nginx/cache keys_zone=one:10m;
#}

# must mkdir -p /data/static/.cache/one & two first
#```nginx
proxy_cache_path /data/.cache/one levels=1:2 keys_zone=one:10m max_size=10g inactive=1d;
proxy_cache_path /data/.cache/two levels=1:2 keys_zone=two:10m max_size=10g inactive=1d;
#```

# All other requests go to ssd_cache

# /path/to/cache : 本地路径，缓存文件存放地址；
# levels : 默认所有缓存文件都放在同一个/path/to/cache下，从而影响缓存的性能，大部分场景推荐使用2级目录来存储缓存文件；
# key_zone : 在共享内存中设置一块存储区域来存放缓存的key和metadata（类似使用次数），这样nginx可以快速判断一个request是否命中或者未命中缓存，1m可以存储8000个key，10m可以存储80000个key；
# max_size : 最大cache空间，如果不指定，会使用掉所有disk space，当达到配额后，会删除最少使用的cache文件；
# inactive : 未被访问文件在缓存中保留时间，本配置中如果60分钟未被访问则不论状态是否为expired，缓存控制程序会删掉文件，默认为10分钟；“需要注意的是，inactive和expired配置项的含义是不同的，expired只是缓存过期，但不会被删除，inactive是删除指定时间内未被访问的缓存文件”；
# use_temp_path : 如果为off，则nginx会将缓存文件直接写入指定的cache文件中，而不是使用temp_path存储，official建议为off，避免文件在不同文件系统中不必要的拷贝；

# 策略配置
#map $request_uri $cache {
#    ~.mp4(?.*)?$  disk_cache;
#    ~.avi(?.*)?$  disk_cache;
#    default ssd_cache;
#}

#split_clients $request_uri $my_cache {
#              50%          "my_cache_hdd1";
#              50%          "my_cache_hdd2";
#}

# proxy_cache : 启用proxy cache，指定key_zone;
#! used in server or location
#location / { # location ~ .*\.(gif|jpg|png|txt|htm|html|css|js|flv|ico|swf)(.*){}
#    proxy_pass $upstream; 

#    proxy_cache my_cache; #使用名为 tmp -test 的对应缓存配置
#    proxy_cache_key $uri; #定义缓存唯一key,通过唯一key来进行hash存取
#    proxy_cache_purge $purge_method; #清理缓存
#    proxy_set_header Range $http_range; #支持range（断点续传）
#    proxy_cache_valid  200 206 304 301 302 10d; #对httpcode为200…的缓存10天
#    proxy_cache_valid any 1h; #其它的保存一小时
#    proxy_cache_use_stale; #proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | http_429 | off ...;当被代理服务器无法访问或出错时，nginx用历史缓存响应客户端请求，默认off
#    add_header  Nginx-Cache "$upstream_cache_status"; #利用nginx $upstream_cache_status变量:该变量代表缓存命中的状态， 如果命中，为HIT；如果未命中，为MISS
#}

